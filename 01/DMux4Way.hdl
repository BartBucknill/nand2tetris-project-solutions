// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

 /**
  * Solution: Use the most significant bit of the selector to decide in which
  * direction to send the input. Then use the second bit in the next step to
  * decide which output to send in to.
  * The other branch not matched by the most significant bit will always get 0,
  * so the second step will necessarily output 0 on that branch, no matter what
  * the other bit in the selector is.
  */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    DMux(in=in, sel=sel[1], a=abOut, b=cdOut);
    DMux(in=abOut, sel=sel[0], a=a, b=b);
    DMux(in=cdOut, sel=sel[0], a=c, b=d);

}
